apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {

    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "biz.gelicon.artfarm.app"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode file('build.txt').text as int
        versionName file('version.txt').text
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled = true
    }

    dataBinding {
        enabled = true
    }

    signingConfigs {
        release {
            storeFile file(androidReleaseKeystore)
            storePassword androidReleaseKeystorePass
            keyAlias androidReleaseKeyAlias
            keyPassword androidReleaseKeyPass
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            debuggable true
            jniDebuggable false
            renderscriptDebuggable false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

/**
 * test dependencies. С зависимостями не разбирался.
 * По необходимости разобраться и подключить
 */
//dependencies {
//    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })
//    testImplementation "androidx.test.ext:junit:1.0.0"
//}

/**
 * Блок androidx зависимостей
 */
dependencies {
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$androidLifecycleVersion"

    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.vectordrawable:vectordrawable:1.0.1'

    implementation "androidx.paging:paging-runtime:2.0.0"
}

/**
 * Блок material design зависимостей
 */
dependencies {
    implementation "com.google.android.material:material:$androidMaterialVersion"
}

/**
 * Room database. Last stable
 */
dependencies {
    annotationProcessor "androidx.room:room-compiler:$androidRoomVersion"
    implementation "androidx.room:room-runtime:$androidRoomVersion"
}

// Remote access
dependencies {
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.5'
}

/**
 * Android Annotation
 */
dependencies {
    annotationProcessor "org.androidannotations:androidannotations:$requiredAndroidAnnotationVersion"
    implementation "org.androidannotations:androidannotations-api:$requiredAndroidAnnotationVersion"
}

/**
 * Google Firebase. Last stable
 */
dependencies {
    implementation "com.google.firebase:firebase-core:16.0.5"
    implementation "com.google.firebase:firebase-messaging:17.3.4"
}

// Google play services. Last stable
dependencies {
    implementation 'com.google.android.gms:play-services-base:16.0.1'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
}

// zxing
dependencies {
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    implementation 'com.google.zxing:core:3.3.3'
}

// fresco
dependencies{
    implementation 'com.facebook.fresco:fresco:1.10.0'
}

/**
 * Yandex maps
 */
dependencies {
    implementation "com.yandex.android:mapkit:$requiredYandexMapsVersion"
    // Основная библиотека MapKit.
//    implementation "com.yandex.android:search:$requiredYandexMapsVersion"
//    implementation "com.yandex.android:directions:$requiredYandexMapsVersion"
//    implementation "com.yandex.android:transport:$requiredYandexMapsVersion"
//    implementation "com.yandex.android:places:$requiredYandexMapsVersion"
}

/**
 * Динамическое подключение проекта библиотеки lib-common.
 * Если проект библиотеки не доступен, то используется заданный артефакт.
 */
dependencies {
    def artifact = "biz.gelicon.android:lib-pill:$requiredLibPillVersion"
    def project = findProject(':lib-pill')
    implementation project != null ? project : artifact
}

/**
 * Динамическое подключение проекта библиотеки lib-common.
 * Если проект библиотеки не доступен, то используется заданный артефакт.
 */
dependencies {
    def artifact = "biz.gelicon.android:lib-common:$requiredAndroidControlsVersion"
    def project = findProject(':lib-common')
    implementation project != null ? project : artifact
}

/**
 * Динамическое подключение проекта библиотеки lib-form.
 * Если проект библиотеки не доступен, то используется заданный артефакт.
 */
dependencies {
    def artifact = "biz.gelicon.android:lib-form:$requiredAndroidControlsVersion"
    def project = findProject(':lib-form')
    implementation project != null ? project : artifact
    implementation 'org.jetbrains:annotations:15.0'
}

dependencies{
    implementation 'ru.egslava:MaskedEditText:1.0.5'
}